// Filename: threadDummyImpl.I
// Created by:  drose (09Aug02)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) 2001 - 2004, Disney Enterprises, Inc.  All rights reserved
//
// All use of this software is subject to the terms of the Panda 3d
// Software license.  You should have received a copy of this license
// along with this source code; you will also find a current copy of
// the license at http://etc.cmu.edu/panda3d/docs/license/ .
//
// To contact the maintainers of this program write to
// panda3d-general@lists.sourceforge.net .
//
////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////
//     Function: ThreadDummyImpl::Constructor
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE ThreadDummyImpl::
ThreadDummyImpl(Thread *) {
}

////////////////////////////////////////////////////////////////////
//     Function: ThreadDummyImpl::Destructor
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE ThreadDummyImpl::
~ThreadDummyImpl() {
}

////////////////////////////////////////////////////////////////////
//     Function: ThreadDummyImpl::start
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE bool ThreadDummyImpl::
start(ThreadPriority, bool, bool) {
  return false;
}

////////////////////////////////////////////////////////////////////
//     Function: ThreadDummyImpl::interrupt
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE void ThreadDummyImpl::
interrupt() {
}

////////////////////////////////////////////////////////////////////
//     Function: ThreadDummyImpl::join
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE void ThreadDummyImpl::
join() {
}

////////////////////////////////////////////////////////////////////
//     Function: ThreadDummyImpl::prepare_for_exit
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE void ThreadDummyImpl::
prepare_for_exit() {
}

////////////////////////////////////////////////////////////////////
//     Function: ThreadDummyImpl::Constructor
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE Thread *ThreadDummyImpl::
get_current_thread() {
  return NULL;
}

////////////////////////////////////////////////////////////////////
//     Function: ThreadDummyImpl::is_threading_supported
//       Access: Public, Static
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE bool ThreadDummyImpl::
is_threading_supported() {
  return false;
}

////////////////////////////////////////////////////////////////////
//     Function: ThreadDummyImpl::sleep
//       Access: Public, Static
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE void ThreadDummyImpl::
sleep(double) {
}
