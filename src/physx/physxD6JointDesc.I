// Filename: physxD6JointDesc.I
// Created by:  pratt (Jun 20, 2006)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function : is_valid
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE bool PhysxD6JointDesc::
is_valid() const {
  return nD6JointDesc.isValid();
}

////////////////////////////////////////////////////////////////////
//     Function : set_to_default
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE void PhysxD6JointDesc::
set_to_default() {
  nD6JointDesc.setToDefault();
}

////////////////////////////////////////////////////////////////////
//     Function : get_flags
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE unsigned int PhysxD6JointDesc::
get_flags() const {
  return nD6JointDesc.flags;
}

////////////////////////////////////////////////////////////////////
//     Function : get_gear_ratio
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE float PhysxD6JointDesc::
get_gear_ratio() const {
  return nD6JointDesc.gearRatio;
}

////////////////////////////////////////////////////////////////////
//     Function : get_projection_angle
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE float PhysxD6JointDesc::
get_projection_angle() const {
  return nD6JointDesc.projectionAngle;
}

////////////////////////////////////////////////////////////////////
//     Function : get_projection_distance
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE float PhysxD6JointDesc::
get_projection_distance() const {
  return nD6JointDesc.projectionDistance;
}

////////////////////////////////////////////////////////////////////
//     Function : set_flags
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE void PhysxD6JointDesc::
set_flags(unsigned int value) {
  nD6JointDesc.flags = value;
}

////////////////////////////////////////////////////////////////////
//     Function : set_gear_ratio
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE void PhysxD6JointDesc::
set_gear_ratio(float value) {
  nD6JointDesc.gearRatio = value;
}

////////////////////////////////////////////////////////////////////
//     Function : set_projection_angle
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE void PhysxD6JointDesc::
set_projection_angle(float value) {
  nD6JointDesc.projectionAngle = value;
}

////////////////////////////////////////////////////////////////////
//     Function : set_projection_distance
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE void PhysxD6JointDesc::
set_projection_distance(float value) {
  nD6JointDesc.projectionDistance = value;
}

