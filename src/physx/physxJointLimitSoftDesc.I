// Filename: physxJointLimitSoftDesc.I
// Created by:  pratt (Jun 20, 2006)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function : is_valid
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE bool PhysxJointLimitSoftDesc::
is_valid() const {
  return nJointLimitSoftDesc.isValid();
}

////////////////////////////////////////////////////////////////////
//     Function : set_to_default
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE void PhysxJointLimitSoftDesc::
set_to_default() {
  nJointLimitSoftDesc.setToDefault();
}

////////////////////////////////////////////////////////////////////
//     Function : get_damping
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE float PhysxJointLimitSoftDesc::
get_damping() const {
  return nJointLimitSoftDesc.damping;
}

////////////////////////////////////////////////////////////////////
//     Function : get_restitution
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE float PhysxJointLimitSoftDesc::
get_restitution() const {
  return nJointLimitSoftDesc.restitution;
}

////////////////////////////////////////////////////////////////////
//     Function : get_spring
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE float PhysxJointLimitSoftDesc::
get_spring() const {
  return nJointLimitSoftDesc.spring;
}

////////////////////////////////////////////////////////////////////
//     Function : get_value
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE float PhysxJointLimitSoftDesc::
get_value() const {
  return nJointLimitSoftDesc.value;
}

////////////////////////////////////////////////////////////////////
//     Function : set_damping
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE void PhysxJointLimitSoftDesc::
set_damping(float value) {
  nJointLimitSoftDesc.damping = value;
}

////////////////////////////////////////////////////////////////////
//     Function : set_restitution
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE void PhysxJointLimitSoftDesc::
set_restitution(float value) {
  nJointLimitSoftDesc.restitution = value;
}

////////////////////////////////////////////////////////////////////
//     Function : set_spring
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE void PhysxJointLimitSoftDesc::
set_spring(float value) {
  nJointLimitSoftDesc.spring = value;
}

////////////////////////////////////////////////////////////////////
//     Function : set_value
//       Access : Published
//  Description :
////////////////////////////////////////////////////////////////////
INLINE void PhysxJointLimitSoftDesc::
set_value(float value) {
  nJointLimitSoftDesc.value = value;
}

