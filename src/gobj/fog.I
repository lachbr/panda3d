// Filename: fog.I
// Created by:  krisg (05Feb01)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) 2001, Disney Enterprises, Inc.  All rights reserved
//
// All use of this software is subject to the terms of the Panda 3d
// Software license.  You should have received a copy of this license
// along with this source code; you will also find a current copy of
// the license at http://www.panda3d.org/license.txt .
//
// To contact the maintainers of this program write to
// panda3d@yahoogroups.com .
//
////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////
//     Function: Fog::get_mode
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE Fog::Mode Fog::get_mode(void) const {
  return _mode;
}

////////////////////////////////////////////////////////////////////
//     Function: Fog::set_mode
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE void Fog::set_mode(Mode mode) {
  _mode = mode;
//  compute_density();
}

////////////////////////////////////////////////////////////////////
//     Function: Fog::get_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE Colorf Fog::get_color(void) const {
  return _color;
}

////////////////////////////////////////////////////////////////////
//     Function: Fog::set_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE void Fog::set_color(const Colorf &color) {
  _color = color;
}

////////////////////////////////////////////////////////////////////
//     Function: Fog::get_range
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE void Fog::get_range(float &onset, float &opaque) const {
  onset = _onset_distance;
  opaque = _opaque_distance;
}

////////////////////////////////////////////////////////////////////
//     Function: Fog::set_range
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE void Fog::set_range(float onset, float opaque) {
  _onset_distance = onset;
  _opaque_distance = opaque;
//  compute_density();
}

////////////////////////////////////////////////////////////////////
//     Function: Fog::get_density
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE float Fog::get_density(void) const {
  return _density;
}

INLINE void Fog::set_density(float fDensity) {
  assert((fDensity >= 0.0) && (fDensity <= 1.0));
  _density = fDensity;
}

////////////////////////////////////////////////////////////////////
//     Function: Fog::apply
//       Access: Public
//  Description: Called during rendering to enable fogging with the
//               GSG.
////////////////////////////////////////////////////////////////////
INLINE void Fog::
apply(GraphicsStateGuardianBase *gsg) {
  gsg->apply_fog(this);
}
