// Filename: material.I
// Created by:  mike (05Feb99)
// 
////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////
//     Function: Material::get_ambient 
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE Colorf Material::get_ambient( void ) const
{
    return _ambient;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::set_ambient
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE void Material::set_ambient( const Colorf& color )
{
    _ambient = color;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::get_diffuse
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE Colorf Material::get_diffuse( void ) const
{
    return _diffuse;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::set_diffuse
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE void Material::set_diffuse( const Colorf& color )
{
    _diffuse = color;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::get_specular
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE Colorf Material::get_specular( void ) const
{
    return _specular;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::set_specular
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE void Material::set_specular( const Colorf& color )
{
    _specular = color;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::get_shininess
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE float Material::get_shininess( void ) const
{
    return _shininess;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::set_shininess
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE void Material::set_shininess( float shininess )
{
    _shininess = shininess;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::get_emission
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE Colorf Material::get_emission( void ) const
{
    return _emission;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::set_emission
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE void Material::set_emission( const Colorf& color )
{
    _emission = color;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::get_local
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE bool Material::get_local( void ) const
{
    return _local;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::set_local
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE void Material::set_local( bool local )
{
    _local = local;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::get_twoside
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE bool Material::get_twoside( void ) const
{
    return _twoside;
}

////////////////////////////////////////////////////////////////////
//     Function: Material::set_twoside
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
INLINE void Material::set_twoside( bool twoside )
{
    _twoside = twoside;
}
