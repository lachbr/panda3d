// Filename: qppgTop.I
// Created by:  drose (13Mar02)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) 2001, Disney Enterprises, Inc.  All rights reserved
//
// All use of this software is subject to the terms of the Panda 3d
// Software license.  You should have received a copy of this license
// along with this source code; you will also find a current copy of
// the license at http://www.panda3d.org/license.txt .
//
// To contact the maintainers of this program write to
// panda3d@yahoogroups.com .
//
////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////
//     Function: qpPGTop::Copy Constructor
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE qpPGTop::
qpPGTop(const qpPGTop &copy) :
  PandaNode(copy),
  _watcher(copy._watcher)
{
}

////////////////////////////////////////////////////////////////////
//     Function: qpPGTop::get_mouse_watcher
//       Access: Published
//  Description: Returns the MouseWatcher pointer that the qpPGTop object
//               registers its PG items with, or NULL if the
//               MouseWatcher has not yet been set.
////////////////////////////////////////////////////////////////////
INLINE qpMouseWatcher *qpPGTop::
get_mouse_watcher() const {
  return _watcher;
}

////////////////////////////////////////////////////////////////////
//     Function: qpPGTop::add_region
//       Access: Public
//  Description: Adds the indicated region to the set of regions in
//               the group.  Returns true if it was successfully
//               added, or false if it was already on the list.
////////////////////////////////////////////////////////////////////
INLINE bool qpPGTop::
add_region(MouseWatcherRegion *region) {
  if (_watcher_group == (PGMouseWatcherGroup *)NULL) {
    return false;
  }
  return _watcher_group->add_region(region);
}

////////////////////////////////////////////////////////////////////
//     Function: qpPGTop::clear_regions
//       Access: Public
//  Description: Removes all the regions from the group.
////////////////////////////////////////////////////////////////////
INLINE void qpPGTop::
clear_regions() {
  if (_watcher_group == (PGMouseWatcherGroup *)NULL) {
    return;
  }
  _watcher_group->clear_regions();
}
