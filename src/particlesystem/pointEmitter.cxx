// Filename: pointEmitter.cxx
// Created by:  charles (22Jun00)
// 
////////////////////////////////////////////////////////////////////

#include "pointEmitter.h"

////////////////////////////////////////////////////////////////////
//    Function : PointEmitter
//      Access : Public
// Description : constructor
////////////////////////////////////////////////////////////////////
PointEmitter::
PointEmitter(void) : 
  BaseParticleEmitter() {
  _point.set(0.0f, 0.0f, 0.0f);
  _launch_vec.set(0, 0, 0);
}

////////////////////////////////////////////////////////////////////
//    Function : PointEmitter
//      Access : Public
// Description : copy constructor
////////////////////////////////////////////////////////////////////
PointEmitter::
PointEmitter(const PointEmitter &copy) :
  BaseParticleEmitter(copy) {
  _point = copy._point;
  _launch_vec = copy._launch_vec;
}

////////////////////////////////////////////////////////////////////
//    Function : ~PointEmitter
//      Access : Public
// Description : destructor
////////////////////////////////////////////////////////////////////
PointEmitter::
~PointEmitter(void) {
}

////////////////////////////////////////////////////////////////////
//    Function : make_copy
//      Access : Public
// Description : copier
////////////////////////////////////////////////////////////////////
BaseParticleEmitter *PointEmitter::
make_copy(void) {
  return new PointEmitter(*this);
}

////////////////////////////////////////////////////////////////////
//    Function : PointEmitter::create_particle_location
//      Access : Public
// Description : Generates a location on the point
////////////////////////////////////////////////////////////////////
void PointEmitter::
assign_initial_values(LPoint3f& pos, LVector3f& vel)
{
  pos = _point;
  vel = _launch_vec;
}
