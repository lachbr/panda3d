// Filename: pointEmitter.C
// Created by:  charles (22Jun00)
// 
////////////////////////////////////////////////////////////////////

#include "pointEmitter.h"

////////////////////////////////////////////////////////////////////
//    Function : PointEmitter
//      Access : Public
// Description : constructor
////////////////////////////////////////////////////////////////////
PointEmitter::
PointEmitter(void) : 
  BaseParticleEmitter() {
  _location.set(0.0f, 0.0f, 0.0f);
}

////////////////////////////////////////////////////////////////////
//    Function : PointEmitter
//      Access : Public
// Description : copy constructor
////////////////////////////////////////////////////////////////////
PointEmitter::
PointEmitter(const PointEmitter &copy) :
  BaseParticleEmitter(copy) {
  _location = copy._location;
}

////////////////////////////////////////////////////////////////////
//    Function : ~PointEmitter
//      Access : Public
// Description : destructor
////////////////////////////////////////////////////////////////////
PointEmitter::
~PointEmitter(void) {
}

////////////////////////////////////////////////////////////////////
//    Function : make_copy
//      Access : Public
// Description : copier
////////////////////////////////////////////////////////////////////
BaseParticleEmitter *PointEmitter::
make_copy(void) {
  return new PointEmitter(*this);
}

////////////////////////////////////////////////////////////////////
//    Function : PointEmitter::assign_initial_position
//      Access : Public
// Description : Generates a location for a new particle
////////////////////////////////////////////////////////////////////
void PointEmitter::
assign_initial_position(LPoint3f& pos) {
  pos = _location;
}

////////////////////////////////////////////////////////////////////
//    Function : PointEmitter::assign_initial_velocity
//      Access : Public
// Description : Generates a velocity for a new particle
////////////////////////////////////////////////////////////////////
void PointEmitter::
assign_initial_velocity(LVector3f& vel) {
  vel.set(0,0,0);
}
