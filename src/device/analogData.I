// Filename: analogData.I
// Created by:  jason (04Aug00)
// 
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: AnalogData::Default Constructor
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE AnalogData::
AnalogData() :
  atime(0)
{
  channels = new vector_double;
  stored_channels = new vector_double;
}

////////////////////////////////////////////////////////////////////
//     Function: AnalogData::Default Constructor
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE AnalogData::
~AnalogData() {
  delete channels;
  delete stored_channels;
}

////////////////////////////////////////////////////////////////////
//     Function: AnalogData::Copy Constructor
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE AnalogData::
AnalogData(const AnalogData &copy) {
  (*this) = copy;
}

////////////////////////////////////////////////////////////////////
//     Function: AnalogData::Copy Assignment Operator
//       Access: Public
//  Description: 
////////////////////////////////////////////////////////////////////
INLINE AnalogData &AnalogData::
operator = (const AnalogData &copy) {
  atime = copy.atime;
  channels = new vector_double(*copy.channels);
  stored_channels = new vector_double(*copy.stored_channels);

  return *this;
}

////////////////////////////////////////////////////////////////////
//     Function: AnalogData::none
//       Access: Public, Static
//  Description: Returns an empty AnalogData object
////////////////////////////////////////////////////////////////////
INLINE const AnalogData &AnalogData::
none() {
 return _none; 
}
