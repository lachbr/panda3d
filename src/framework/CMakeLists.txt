set(P3FRAMEWORK_HEADERS
  config_framework.h
  pandaFramework.I pandaFramework.h
  windowFramework.I windowFramework.h
)

set(P3FRAMEWORK_SOURCES
  config_framework.cxx
  pandaFramework.cxx
  windowFramework.cxx
  rock_floor.rgb_src.c shuttle_controls.bam_src.c
)


set(P3FRAMEWORK_LINK_TARGETS p3char p3pgui p3recorder p3collide) #p3recorder p3collide p3pnmimagetypes
if(LINK_ALL_STATIC)
  # If we're statically linking, we need to explicitly link with
  # at least one of the available renderers.
  if(HAVE_GL)
    set(P3FRAMEWORK_LINK_TARGETS
      ${P3FRAMEWORK_LINK_TARGETS}
      pandagl
    )
  elseif(HAVE_DX10)
    set(P3FRAMEWORK_LINK_TARGETS
      ${P3FRAMEWORK_LINK_TARGETS}
      pandadx10
    )
  elseif(HAVE_DX9)
    set(P3FRAMEWORK_LINK_TARGETS
      ${P3FRAMEWORK_LINK_TARGETS}
      pandadx9
    )
  elseif(HAVE_DX8)
    set(P3FRAMEWORK_LINK_TARGETS
      ${P3FRAMEWORK_LINK_TARGETS}
      pandadx8
    )
  elseif(HAVE_TINYDISPLAY)
    set(P3FRAMEWORK_LINK_TARGETS
      ${P3FRAMEWORK_LINK_TARGETS}
      p3tinydisplay
    )
  else()
    message(WARNING
      "No renderer library available to link to p3framework."
    )
  endif()

  # And we might like to have the p3egg loader available.
  if(HAVE_EGG)
    set(P3FRAMEWORK_LINK_TARGETS
      ${P3FRAMEWORK_LINK_TARGETS}
      pandaegg
    )
  endif()
endif()

composite_sources(p3framework P3FRAMEWORK_SOURCES)
add_library(p3framework ${P3FRAMEWORK_HEADERS} ${P3FRAMEWORK_SOURCES})
target_link_libraries(p3framework ${P3FRAMEWORK_LINK_TARGETS})
