#! /bin/bash

# This is just a helper script to generatePythonCode to cover
# the three or four cases we use all the time
# usage: genPyCode [-t] [-v] [-n] [linux|win-debug|win-release|win-publish|install|release] [other libs]

# -t adds libtoontown
# -v adds libvrpn
# -n doesn't perform a squeeze

base_dir=$(pwd)
extra_genPyCode_libs=""
fSqueeze="squeezeMe"
optimizeFlag=""
ppython=ppython
ppythonOptimizeFlag=""

while getopts tvn flag; do
  case $flag in
    t) extra_genPyCode_libs="$extra_genPyCode_libs libtoontown" ;;
    v) extra_genPyCode_libs="$extra_genPyCode_libs libvrpn" ;;
    n) fSqueeze="" ;;
  esac
done

shift `expr $OPTIND - 1`

buildType="$1"
shift
extra_genPyCode_libs="$extra_genPyCode_libs $*"

if [ "$INSTALL_DIR" != "" ]; then
    install_dir=$(cygpath -am $INSTALL_DIR)
elif [ "$DIRECT" != "" ]; then
    install_dir=$(cygpath -am $DIRECT)
else
    install_dir=$(cygpath -am ./install)
fi

if [ "$buildType" = "linux" ]; then
    pyDir=$DIRECT/lib/py
    cd $DIRECT/bin
    ppython -d generatePythonCode -v -d $pyDir -e $DIRECT/src/extensions -i libdtoolconfig libpandaexpress libpanda libpandaphysics libdirect $extra_genPyCode_libs || exit
    pSqueezer=$DIRECT/src/showbase/pandaSqueezer.py
elif [ "$buildType" = "win-debug" ]; then
    pyDir=$(cygpath -m $DIRECT/lib/py)
    cd $DIRECT/bin
    ppython -d generatePythonCode -v -d $pyDir -e `cygpath -w $DIRECT/src/extensions` -i libdtoolconfig libpandaexpress libpanda libpandaphysics libdirect $extra_genPyCode_libs || exit
elif [ "$buildType" = "win-release" ]; then
    pyDir=$(cygpath -m $DIRECT/lib/py)
    cd $DIRECT/bin
    ppython generatePythonCode -v -d $pyDir -e `cygpath -w $DIRECT/src/extensions` -i libdtoolconfig libpandaexpress libpanda libpandaphysics libdirect $extra_genPyCode_libs || exit
    pSqueezer=`cygpath -w $DIRECT/src/showbase/pandaSqueezer.py`
elif [ "$buildType" = "win-publish" ]; then
    # no assertions, no comments, no docstrings
    pyDir=$(cygpath -m $DIRECT/lib/py)
    cd $DIRECT/bin
    ppython -OO generatePythonCode -O -v -d $pyDir -e `cygpath -w $DIRECT/src/extensions` -i libdtoolconfig libpandaexpress libpanda libpandaphysics libdirect $extra_genPyCode_libs || exit
    optimizeFlag="-O"
    ppythonOptimizeFlag="-OO"
    pSqueezer=`cygpath -w $DIRECT/src/showbase/pandaSqueezer.py`
elif [ "$buildType" = "install" ]; then
    # Use relative paths; as installed on a machine without ctattach etc.
    pyDir=$install_dir/lib/py
    ppython=$install_dir/bin/ppython
    $ppython -d $install_dir/bin/generatePythonCode -O -v -d $pyDir -e direct/src/extensions -i libdtoolconfig libpandaexpress libpanda libpandaphysics libdirect $extra_genPyCode_libs || exit
    pSqueezer=$(cygpath -m $base_dir/direct/src/showbase/pandaSqueezer.py) || exit
elif [ "$buildType" = "release" ]; then
    # Use relative paths; as installed on a machine without ctattach etc.
    pyDir=$install_dir/lib/py
    ppython=$install_dir/bin/ppython
    $ppython $install_dir/bin/generatePythonCode -v -d $pyDir -e direct/src/extensions -i libdtoolconfig libpandaexpress libpanda libpandaphysics libdirect $extra_genPyCode_libs || exit
    pSqueezer=$(cygpath -m $base_dir/direct/src/showbase/pandaSqueezer.py) || exit
else
    echo "Invalid parameter: $buildType"
    exit 1
fi

if [ "$fSqueeze" = "squeezeMe" ]; then
    echo SQUEEZING PandaModules
    cd $pyDir              || exit
    rm -f PandaModules.py* || exit
    $ppython $ppythonOptimizeFlag $pSqueezer $optimizeFlag || exit
else
    echo RENAMING PandaModulesUnsqueezed.py to PandaModules.py
    cd $pyDir              || exit
    rm -f PandaModules.py* || exit
    mv PandaModulesUnsqueezed.py PandaModules.py || exit
fi

echo DONE

